{"version":3,"sources":["components/Button.js","components/ListEntry.js","components/InputField.js","services/JSONService.js","components/Notification.js","App.js","index.js"],"names":["Button","_ref","text","handler","react_default","a","createElement","onClick","ListEntry","entry","button","buttonOnClick","name","number","components_Button","InputField","value","onChange","baseUrl","JSONService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","concat","remove","delete","change","Notification","message","className","notificationSuccess","notificationFailure","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addPerson","event","preventDefault","state","newName","setNotification","newNumber","found","phonebook","find","toLowerCase","undefined","personObject","objectSpread","map","setState","entriesToShow","catch","error","searchString","deletePerson","componentDidMount","handleNameChange","target","handleNumberChange","handleSearchChange","filter","entryInLowercase","includes","errorClass","_this2","setTimeout","_this3","_this4","onSubmit","components_InputField","type","components_Notification","components_ListEntry","key","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f0fa212a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Button = ({ text, handler }) => <button onClick={handler}>{text}</button>\r\n\r\n\r\nexport default Button","import React from 'react'\r\nimport Button from './Button'\r\n\r\nconst ListEntry = ({ entry, button, buttonOnClick }) => {\r\n    const ButtonRender = () => {\r\n        if (button)\r\n            return (<Button handler={buttonOnClick} text=\"Delete\" />)\r\n        else\r\n            return (\" \")\r\n    }\r\n    return (\r\n        <div>\r\n            {entry.name}: {entry.number} <ButtonRender /><br /><br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListEntry","import React from 'react'\r\n\r\nconst InputField = ({ text, value, onChange }) => {\r\n    return (\r\n        <div>\r\n            {text}\r\n            <input\r\n                value={value}\r\n                onChange={onChange} />\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InputField\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(baseUrl + \"/\" + id)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst change = (id, newObject) => {\r\n    const request = axios.put(baseUrl + \"/\" + id, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove, change }\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message, className }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className={className}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react';\r\nimport ListEntry from './components/ListEntry'\r\nimport InputField from './components/InputField'\r\nimport JSONService from './services/JSONService'\r\nimport Notification from './components/Notification';\r\n\r\nconst notificationSuccess = 'notification_success'\r\nconst notificationFailure = 'notification_failure'\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            phonebook: [],\r\n            newName: '',\r\n            newNumber: '',\r\n            entriesToShow: [],\r\n            searchString: '',\r\n            error: {\r\n                message: '',\r\n                className: ''\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    setNotification(message, errorClass) {\r\n        this.setState({\r\n            error: {\r\n                message: message,\r\n                className: errorClass\r\n            }\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({\r\n                error: {\r\n                    message: null\r\n                }\r\n            })\r\n        }, 5000)\r\n    }\r\n\r\n    componentDidMount() {\r\n        JSONService\r\n            .getAll()\r\n            .then(phonebook => {\r\n                this.setState({\r\n                    phonebook,\r\n                    entriesToShow: phonebook\r\n                })\r\n            })\r\n            .catch(error => { })\r\n    }\r\n\r\n    addPerson = (event) => {\r\n        event.preventDefault()\r\n        if (this.state.newName === '') {\r\n            this.setNotification('Please enter a name.', notificationFailure)\r\n        }\r\n        else if (this.state.newNumber === '') {\r\n            this.setNotification('Please enter a number, too.', notificationFailure)\r\n        }\r\n        else {\r\n            let found = this.state.phonebook.find(entry => entry.name.toLowerCase() == this.state.newName.toLowerCase());\r\n            if (found !== undefined) {\r\n                const personObject = {\r\n                    ...found,\r\n                    number: this.state.newNumber\r\n                }\r\n                JSONService\r\n                    .change(found.id, personObject)\r\n                    .then(response => {\r\n                        const phonebook = this.state.phonebook.map(entry => entry.id !== found.id ? entry : personObject)\r\n                        this.setState({\r\n                            newName: '',\r\n                            newNumber: '',\r\n                            phonebook: phonebook,\r\n                            entriesToShow: phonebook\r\n                        })\r\n                        this.setNotification('Modified ' + personObject.name + ' to phonebook.', notificationSuccess)\r\n                    })\r\n                    .catch(error => {\r\n                        this.setNotification('Unable to modify ' + personObject.name + ' for some reason.', notificationFailure)\r\n                    })\r\n            }\r\n            else {\r\n                const personObject = {\r\n                    name: this.state.newName,\r\n                    number: this.state.newNumber\r\n                }\r\n\r\n                JSONService\r\n                    .create(personObject)\r\n                    .then(entry => {\r\n                        this.setState({\r\n                            phonebook: this.state.phonebook.concat(entry),\r\n                            entriesToShow: this.state.phonebook.concat(entry),\r\n                            newName: '',\r\n                            newNumber: '',\r\n                            searchString: ''\r\n                        })\r\n                        this.setNotification('Added ' + personObject.name + ' to phonebook.', notificationSuccess)\r\n                    })\r\n                    .catch(error => {\r\n                        this.setNotification('Unable to add ' + personObject.name + ' for some reason.', notificationFailure)\r\n                    })\r\n            }\r\n        }\r\n    }\r\n\r\n    deletePerson = (event, id) => {\r\n        event.preventDefault()\r\n        JSONService\r\n            .remove(id)\r\n            .then(entry => {\r\n                JSONService\r\n                    .getAll()\r\n                    .then(phonebook => {\r\n                        this.setState({\r\n                            phonebook,\r\n                            entriesToShow: phonebook\r\n                        })\r\n                        this.setNotification('Deleted an entry from the phonebook.', notificationSuccess)\r\n                    })\r\n            })\r\n            .catch(error => {\r\n                this.setNotification(this.state.phonebook.find(entry => entry.id === id).name + ' was not found on the server.', notificationFailure)\r\n                this.componentDidMount()\r\n            })\r\n\r\n    }\r\n    // Event handlers for name, number and search fields:\r\n\r\n    handleNameChange = (event) => this.setState({ newName: event.target.value })\r\n    handleNumberChange = (event) => this.setState({ newNumber: event.target.value })\r\n    handleSearchChange = (event) => {\r\n        this.setState({ searchString: event.target.value })\r\n        if (event.target.value === '') {\r\n            this.setState({\r\n                entriesToShow: this.state.phonebook\r\n            })\r\n        }\r\n        else {\r\n            this.setState({\r\n                entriesToShow: this.state.phonebook.filter(entry => {\r\n                    const entryInLowercase = entry.name.toLowerCase()\r\n                    const filter = event.target.value.toLowerCase()\r\n                    return entryInLowercase.includes(filter)\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            < div >\r\n                <h2>Puhelinluettelo</h2>\r\n                <form onSubmit={this.addPerson}>\r\n                    <InputField text=\"Nimi:\" value={this.state.newName} onChange={this.handleNameChange} />\r\n                    <InputField text=\"Numero:\" value={this.state.newNumber} onChange={this.handleNumberChange} />\r\n                    <div>\r\n                        <button type=\"submit\">Lisää</button>\r\n                    </div>\r\n                    <Notification className={this.state.error.className} message={this.state.error.message} />\r\n                </form>\r\n                <h2>Numerot</h2>\r\n                <InputField text=\"Hae nimellä:\" value={this.state.searchString} onChange={this.handleSearchChange} />\r\n                <div>\r\n                    {this.state.entriesToShow.map(entry => <ListEntry key={entry.id} entry={entry} button=\"true\" buttonOnClick={(event) => this.deletePerson(event, entry.id)} />)}\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default App\r\n","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}